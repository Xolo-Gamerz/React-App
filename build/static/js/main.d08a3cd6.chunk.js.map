{"version":3,"sources":["components/Navbar.js","components/TextArea.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","role","aria-labelledby","drop1","drop2","drop3","onClick","toggleMode","htmlFor","TextArea","useState","text","setText","text2","setText2","heading","onChange","event","target","value","rows","toUpperCase","toLowerCase","b","c","Math","floor","random","length","toString","d","a","substring","placeholder","resize","readOnly","App","setMode","document","body","style","backgroundColor","getElementById","color","innerText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d08a3cd6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <a\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n            href=\"/\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </a>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle mx-3\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                  href=\"/\"\r\n                >\r\n                  Links\r\n                </a>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"/\">\r\n                      {props.drop1}\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"/\">\r\n                      {props.drop2}\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"/\">\r\n                      {props.drop3}\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick = {props.toggleMode} />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" id = \"mode\"></label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function TextArea(props) {\r\n  const [text, setText] = useState();\r\n  const [text2, setText2] = useState();\r\n  const clickUpFunc = () => {\r\n    setText(text.toUpperCase());\r\n  };\r\n\r\n  const clickLoFunc = () =>{\r\n    setText(text.toLowerCase());\r\n\r\n  }\r\n  const clickClearPrevFunc = () =>{\r\n    setText2(\"\")\r\n  }\r\n  const clickClearTextFunc = () =>{\r\n    setText(\"\")\r\n  }\r\n  const clickGenFunc = () =>{\r\n    let b = [\"!\",\"#\",\"$\",\"%\",\"&\"]\r\n    let c = Math.floor( Math.random() *b.length.toString(36))\r\n    let d = b[c]\r\n    let a = Math.random().toString(36).substring(2,7) + Math.random().toString(36).substring(2,3).toUpperCase()+ Math.floor(Math.random() * 10).toString(8)+ d\r\n    setText(a)\r\n  }\r\n  const clickUpChange = (event) => {\r\n    setText(event.target.value);\r\n    setText2(event.target.value)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 id = \"colorProp\">{props.heading}</h2>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"form-control\" className=\"form-label\"></label>\r\n        <textarea\r\n          onChange={clickUpChange}\r\n          value={text2}\r\n          className=\"form-control \"\r\n          id=\"box\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n        <div>\r\n          <button className=\"btn btn-primary my-3\" onClick={clickUpFunc}>\r\n            CONVERT TO UPPERCASE\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 mx-3\" onClick={clickLoFunc}>\r\n            CONVERT TO LOWERCASE\r\n          </button>\r\n          <button className=\"btn btn-primary my-3\" onClick={clickGenFunc}>\r\n            PASSWORD GENERATOR\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 mx-3 \" onClick={clickClearPrevFunc}>\r\n            CLEAR PREVIEW AREA\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 \" onClick={clickClearTextFunc}>\r\n            CLEAR TEXT AREA\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"my-3\">\r\n          <h2 id = \"previewColor\">PREVIEW-OUTPUT</h2>\r\n        </div>\r\n\r\n        <div className=\"form-floating my-3 border border-info\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            placeholder=\"Leave a comment here\"\r\n            id=\"floatingTextarea\"\r\n            rows = \"20\"\r\n            resize=\"none\"\r\n            value = {text}\r\n            readOnly={true}\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar.js'\nimport TextArea from './components/TextArea'\nimport React, { useState } from 'react'\n\nfunction App() {\n  const[mode, setMode] = useState('light')\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = 'black'\n      let colorProp = document.getElementById(\"colorProp\")\n      colorProp.style.color = 'white'\n      let previewColor = document.getElementById(\"previewColor\")\n      previewColor.style.color = 'white'\n      let navMode = document.getElementById(\"mode\")\n      navMode.innerText = \"Disable Dark Mode\"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      let colorProp = document.getElementById(\"colorProp\")\n      colorProp.style.color = 'black'\n      let previewColor = document.getElementById(\"previewColor\")\n      previewColor.style.color = 'black'\n      let navMode = document.getElementById(\"mode\")\n      navMode.innerText = \"Enable Dark Mode\"\n    }\n  }\n  return (\n    <>\n    <Navbar title = \"REACT\" drop1 = \"Node.js\" drop2 = \"React.js\" drop3 = \"Javascript\" mode = {mode} toggleMode = {toggleMode}/>\n    <div className = \"container\">\n    <TextArea heading = \"ENTER TEXT BELOW\"/>\n    </div>\n    <div className = \"container my-3\">\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}